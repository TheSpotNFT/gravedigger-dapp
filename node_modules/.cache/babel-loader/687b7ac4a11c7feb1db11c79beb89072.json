{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jjzim\\\\OneDrive\\\\Documents\\\\react_attempts\\\\basic\\\\gravedigger-dapp\\\\src\\\\components\\\\pages\\\\Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Select from 'react-select';\nimport Card from '../Card';\nimport traits from '../../traits';\nimport unnamedData from '../../metadata.jsx';\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\nimport Moralis from 'moralis';\nimport Authenticate from '../Authenticate';\nimport spotNFTAbi from '../../contracts/spotNFTAbi.json';\nimport spotTraitsAbi from '../../contracts/spotTraitsAbi.json';\nimport SetApproval from '../SetApproval';\nimport Mint from '../Mint';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Board = () => {\n  _s();\n\n  const {\n    account,\n    isAuthenticated\n  } = useMoralis();\n  const userAddress = account;\n  const spotTraitsContract = \"0x6BDAd2A83a8e70F459786a96a0a9159574685c0e\";\n  const spotNFTContract = '0x9455aa2aF62B529E49fBFE9D10d67990C0140AFC';\n  const [filter, setFilter] = useState('');\n  const [textinput, setTextinput] = useState('Name');\n  const [xInput, setXInput] = useState('127');\n  const [yInput, setYInput] = useState('185');\n  const [fontSize, setFontSize] = useState('30');\n  const [font, setFont] = useState('Fantasy');\n  const [fontStyle, setFontStyle] = useState('normal');\n\n  const textinputUser = event => {\n    setTextinput(event.target.value);\n  };\n\n  const userXInput = event => {\n    setXInput(event.target.value);\n  };\n\n  const userYInput = event => {\n    setYInput(event.target.value);\n  };\n\n  const userFontSize = event => {\n    setFontSize(event.target.value);\n  };\n\n  const textFontOptions = [{\n    value: \"Arial\",\n    label: \"Arial\"\n  }, {\n    value: \"Comic Sans MS\",\n    label: \"Comic Sans MS\"\n  }, {\n    value: \"Courier New\",\n    label: \"Courier New\"\n  }, {\n    value: \"Times New Roman\",\n    label: \"Times New Roman\"\n  }, {\n    value: \"Fantasy\",\n    label: \"Fantasy\"\n  }, {\n    value: \"Sans-serif\",\n    label: \"Sans-serif\"\n  }, {\n    value: \"Serif\",\n    label: \"Serif\"\n  }, {\n    value: \"Cambria\",\n    label: \"Cambria\"\n  }];\n  const textFontStyleOptions = [{\n    value: \"normal\",\n    label: \"Normal\"\n  }, {\n    value: \"bold\",\n    label: \"Bold\"\n  }];\n\n  const handleChange = selectedOption => {\n    console.log('handleChange', selectedOption.value);\n    setFont(selectedOption.value);\n  };\n\n  const handleChangeStyle = selectedOption => {\n    console.log('handleChange', selectedOption.value);\n    setFontStyle(selectedOption.value);\n  };\n\n  const [textinputText, setTextinputText] = useState('wtf');\n  const [xInputText, setXInputText] = useState('152');\n  const [yInputText, setYInputText] = useState('215');\n  const [fontSizeText, setFontSizeText] = useState('15');\n  const [fontText, setFontText] = useState('Arial');\n  const [fontStyleText, setFontStyleText] = useState('normal');\n\n  const textinputUserText = event => {\n    setTextinputText(event.target.value);\n  };\n\n  const userXInputText = event => {\n    setXInputText(event.target.value);\n  };\n\n  const userYInputText = event => {\n    setYInputText(event.target.value);\n  };\n\n  const userFontSizeText = event => {\n    setFontSizeText(event.target.value);\n  };\n\n  const textFontOptionsText = [{\n    value: \"Arial\",\n    label: \"Arial\"\n  }, {\n    value: \"Comic Sans MS\",\n    label: \"Comic Sans MS\"\n  }, {\n    value: \"Courier New\",\n    label: \"Courier New\"\n  }, {\n    value: \"Times New Roman\",\n    label: \"Times New Roman\"\n  }, {\n    value: \"Fantasy\",\n    label: \"Fantasy\"\n  }, {\n    value: \"Sans-serif\",\n    label: \"Sans-serif\"\n  }, {\n    value: \"Serif\",\n    label: \"Serif\"\n  }, {\n    value: \"Cambria\",\n    label: \"Cambria\"\n  }];\n  const textFontStyleOptionsText = [{\n    value: \"normal\",\n    label: \"Normal\"\n  }, {\n    value: \"bold\",\n    label: \"Bold\"\n  }];\n\n  const handleChangeText = selectedOption => {\n    console.log('handleChange', selectedOption.value);\n    setFontText(selectedOption.value);\n  };\n\n  const handleChangeStyleText = selectedOption => {\n    console.log('handleChange', selectedOption.value);\n    setFontStyleText(selectedOption.value);\n  };\n\n  {\n    /* For Image retrieval */\n  }\n  const [canvasImage, setCanvasImage] = useState({\n    TombStone: '',\n    Text: ''\n  });\n  {\n    /* For Traits retrieval */\n  }\n  const [chosenTrait, setChosenTrait] = useState({\n    TombStone: '',\n    TombStoneID: '1',\n    Eyes: '',\n    Mouth: '',\n    Hat: '',\n    Skin: '',\n    Nose: '',\n    Special: '',\n    Lines: '',\n    Branding: 'None',\n    BrandingID: '9999'\n  }); //Set an array of save UnnamedNFT traits which are unburnable and available to all.\n\n  const start = 3001;\n  const end = 3004;\n  const branding = [...Array(end - start + 1).keys()].map(x => x + start);\n  {\n    /* For retrieval of traits */\n  }\n  const [walletTraits, setWalletTraits] = useState([]);\n  const [apiLoaded, setApiLoaded] = useState(false);\n  const [checkMyTraits, setCheckMyTraits] = useState(false);\n  const unnamedNFTdata = unnamedData;\n\n  function getTraits() {\n    const options = {\n      chain: \"0xa86a\",\n      address: userAddress,\n      token_address: spotTraitsContract\n    };\n    Moralis.Web3API.account.getNFTsForContract(options).then(data => {\n      const result = data.result;\n      setWalletTraits(result.map(nft => nft.token_id));\n      setApiLoaded(true);\n    });\n  }\n\n  useEffect(() => {\n    getTraits();\n  }, [account]);\n\n  function updateText() {\n    drawImage(canvasImage.TombStone);\n  }\n\n  function updateCanvasTraits(trait) {\n    setCanvasImage(prevImage => ({ ...prevImage,\n      [trait.traitType]: trait.image\n    }));\n    setChosenTrait(prevTrait => ({ ...prevTrait,\n      [trait.traitType]: trait.traitName,\n      [trait.traitType + 'ID']: trait.id\n    }));\n  }\n\n  function createCard(trait) {\n    //Building the card here from Card.jsx passing props and simultaneously fetching traits on click.\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        updateCanvasTraits(trait);\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n        nftName: trait.nftName,\n        traitType: trait.traitType,\n        traitName: trait.traitName,\n        image: trait.image,\n        id: trait.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, trait.edition, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  } // For Searching traits\n\n\n  const searchText = event => {\n    setFilter(event.target.value);\n  };\n\n  let dataSearch = traits.filter(item => {\n    return Object.keys(item).some(key => item[key].toString().toLowerCase().includes(filter.toString().toLowerCase()));\n  });\n  let ownedFilter = traits.filter(item => {\n    if (walletTraits.includes(item.id.toString()) || branding.includes(item.id)) {\n      return item;\n    }\n  }); // Putting stuff on Canvas\n\n  const canvas = useRef(null);\n  const hiddenCanvas = useRef(null);\n  const [height, setHeight] = useState(null);\n  const [width, setWidth] = useState(null);\n  const {\n    windowWidth\n  } = useState(window.innerWidth);\n  const {\n    windowHeight\n  } = useState(window.innerHeight);\n  const div = useCallback(node => {\n    if (node !== null) {\n      setHeight(node.getBoundingClientRect().height); //set height and width of canvas relative to parent div.\n\n      setWidth(node.getBoundingClientRect().width);\n    }\n  }, [windowWidth, windowHeight]);\n\n  function drawImage(layer) {\n    const img = new Image(); //img.setAttribute('crossOrigin', '*');\n\n    img.src = layer;\n\n    img.onload = () => {\n      const ctx = canvas.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0, width, height);\n      ctx.font = `${fontStyle} ${fontSize}px ${font}`;\n      ctx.fillText(textinput, xInput, yInput);\n      ctx.font = `${fontStyleText} ${fontSizeText}px ${fontText}`;\n      ctx.fillText(textinputText, xInputText, yInputText, 100);\n    };\n\n    const imgHidden = new Image();\n    imgHidden.src = layer;\n\n    imgHidden.onload = () => {\n      const ctxHidden = hiddenCanvas.current.getContext(\"2d\");\n      ctxHidden.clearRect(0, 0, hiddenCanvas.width, hiddenCanvas.height);\n      ctxHidden.drawImage(imgHidden, 0, 0, 900, 900);\n      ctxHidden.font = `${fontStyle} ${fontSize}px ${font}`;\n      ctxHidden.fillText(textinput, xInput, yInput);\n      ctxHidden.font = `${fontStyleText} ${fontSizeText}px ${fontText}`;\n      ctxHidden.fillText(textinputText, xInputText, yInputText, 100);\n    };\n  }\n\n  useEffect(() => {\n    drawImage(canvasImage.TombStone);\n    drawImage(canvasImage.Text);\n  }, [canvasImage, canvas, windowWidth, windowHeight]);\n  const [savedImage, setSavedImage] = useState('empty image'); //Saving image for sending to IPFS. This part isn't active yet!\n\n  function saveImage() {\n    const result = new Promise((resolve, reject) => {\n      const imageToSave = new Image();\n      imageToSave.src = hiddenCanvas.current.toDataURL('image/png', 1.0);\n\n      imageToSave.onload = function () {\n        resolve(this.src);\n      };\n    });\n    return result;\n  } // Add feature: Filter owned trait cards\n\n\n  const [ownedCards, setOwnedCards] = useState(true); //---------------------------------//\n  //filtering\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Authenticate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this);\n  } else // Main Component Return\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container flex-auto mx-auto w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:sticky top-20 grid 2xl:grid-cols-4 xl:grid-cols-2 lg:grid-cols-2 md:grid-cols-1 sm:grid-cols-1 gap-4 mt-1 ml-6 sm:p-5 bg-slate-900 lg:pb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1 mb-10 sm:mb-10\",\n          ref: div,\n          style: {\n            height: \"20rem\",\n            width: \"20rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvas,\n            width: width,\n            height: height,\n            className: \"mt-1 border-1 border-4 border-slate-500 text-center content-center p-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center md: pl-10\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"font-mono text-lg text-yellow-400 pt-1\",\n              children: \"Gravedigger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: hiddenCanvas,\n            width: \"900px\",\n            height: \"900px\",\n            className: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grow border-dashed border-4 border-slate-500 p-3 pl-5 m-1 text-left col-span-1 w-80 md:mt-10 lg:mt-2 mt-10 sm:mt-10 text-sm\",\n          style: {\n            height: \"23rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono text-white list-none flex pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-${walletTraits.includes(`${chosenTrait.TombStoneID}`) ? \"spot-yellow\" : \"[red]\"} font-bold pr-3`,\n              children: \"TombStone: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this), chosenTrait.TombStoneID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono text-white list-none flex pb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-spot-yellow\",\n              children: \"Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), textinput]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-1 pb-1 flex\",\n            children: /*#__PURE__*/_jsxDEV(Mint, {\n              chosenTrait: chosenTrait,\n              walletTraits: walletTraits,\n              saveImage: saveImage,\n              userAddress: userAddress,\n              canvas: chosenTrait,\n              savedImage: savedImage,\n              branding: branding // traitsAvailability={traitsAvailability}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono text-white list-none flex pb-3 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-[red] pr-3 text-xl\",\n              children: \"* \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 29\n            }, this), \"TombStone not in your wallet.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-full m-2 rounded-lg px-4 py-2 border-2 border-gray-200 text-gray-200\\r hover:bg-gray-200 hover:text-gray-900 duration-300 font-mono font-bold text-base\",\n              onClick: () => {\n                setOwnedCards(!ownedCards);\n              },\n              children: !ownedCards ? 'My TombStones' : 'View All TombStones'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gap-4 pt-4 pl-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2 text-white\",\n              children: \"Tomb Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\",\n                placeholder: \"Engrave\",\n                value: textinput,\n                onChange: textinputUser.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 90\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 85\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2 text-white pt-2\",\n              children: \"X coords: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\",\n                placeholder: \"x plot\",\n                value: xInput,\n                onChange: userXInput.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 94\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 89\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1 text-white pt-2\",\n              children: \"Y coords: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\",\n                placeholder: \"y plot\",\n                value: yInput,\n                onChange: userYInput.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 94\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 89\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1 text-white pt-2\",\n              children: \"Font Size: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\",\n                placeholder: \"Font size\",\n                value: fontSize,\n                onChange: userFontSize.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 95\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 90\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center pt-3 pb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1 w-38\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: textFontOptions,\n                onChange: handleChange,\n                defaultValue: {\n                  label: \"Arial\",\n                  value: \"Arial\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1 w-38\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: textFontStyleOptions,\n                onChange: handleChangeStyle,\n                defaultValue: {\n                  label: \"Normal\",\n                  value: \"normal\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"self-end\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-1/2 m-2 rounded-lg px-4 py-2 border-2 border-gray-200 text-gray-200\\r hover:bg-gray-200 hover:text-gray-900 duration-300 font-mono font-bold text-base\",\n              onClick: updateCanvasTraits,\n              children: \"Refresh Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gap-4 pt-4 pl-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2 text-white\",\n              children: \"Epitaph: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\",\n                placeholder: \"Engrave\",\n                value: textinputText,\n                onChange: textinputUserText.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 88\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 83\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2 text-white pt-2\",\n              children: \"X coords: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\",\n                placeholder: \"x plot\",\n                value: xInputText,\n                onChange: userXInputText.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 94\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 89\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1 text-white pt-2\",\n              children: \"Y coords: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\",\n                placeholder: \"y plot\",\n                value: yInputText,\n                onChange: userYInputText.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 94\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 89\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1 text-white pt-2\",\n              children: \"Font Size: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\",\n                placeholder: \"Font size\",\n                value: fontSizeText,\n                onChange: userFontSizeText.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 95\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 90\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center pt-3 pb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1 w-38\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: textFontOptionsText,\n                onChange: handleChangeText,\n                defaultValue: {\n                  label: \"Arial\",\n                  value: \"Arial\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1 w-38\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: textFontStyleOptionsText,\n                onChange: handleChangeStyleText,\n                defaultValue: {\n                  label: \"Normal\",\n                  value: \"normal\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"self-end\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-1/2 m-2 rounded-lg px-4 py-2 border-2 border-gray-200 text-gray-200\\r hover:bg-gray-200 hover:text-gray-900 duration-300 font-mono font-bold text-base\",\n              onClick: updateCanvasTraits,\n              children: \"Refresh Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-y-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-10 grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-4 xl:grid-cols-6 gap-5 font-mono text-spot-yellow\",\n          children: ownedCards ? ownedFilter.map(createCard) : dataSearch.map(createCard)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this);\n};\n/*\r\n\r\n\r\nlet ownedFilter = traits.filter(item => {\r\n\r\n        if (walletTraits.includes(item.id.toString()) || branding.includes(item.id)) {\r\n\r\n            return item\r\n        }\r\n\r\n    })\r\n    */\n\n_s(Board, \"4R2WOJZqKg+0D5n9bLv6zBwSoO8=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/jjzim/OneDrive/Documents/react_attempts/basic/gravedigger-dapp/src/components/pages/Board.jsx"],"names":["React","useState","useEffect","useRef","useCallback","Select","Card","traits","unnamedData","useMoralis","useWeb3ExecuteFunction","Moralis","Authenticate","spotNFTAbi","spotTraitsAbi","SetApproval","Mint","Board","account","isAuthenticated","userAddress","spotTraitsContract","spotNFTContract","filter","setFilter","textinput","setTextinput","xInput","setXInput","yInput","setYInput","fontSize","setFontSize","font","setFont","fontStyle","setFontStyle","textinputUser","event","target","value","userXInput","userYInput","userFontSize","textFontOptions","label","textFontStyleOptions","handleChange","selectedOption","console","log","handleChangeStyle","textinputText","setTextinputText","xInputText","setXInputText","yInputText","setYInputText","fontSizeText","setFontSizeText","fontText","setFontText","fontStyleText","setFontStyleText","textinputUserText","userXInputText","userYInputText","userFontSizeText","textFontOptionsText","textFontStyleOptionsText","handleChangeText","handleChangeStyleText","canvasImage","setCanvasImage","TombStone","Text","chosenTrait","setChosenTrait","TombStoneID","Eyes","Mouth","Hat","Skin","Nose","Special","Lines","Branding","BrandingID","start","end","branding","Array","keys","map","x","walletTraits","setWalletTraits","apiLoaded","setApiLoaded","checkMyTraits","setCheckMyTraits","unnamedNFTdata","getTraits","options","chain","address","token_address","Web3API","getNFTsForContract","then","data","result","nft","token_id","updateText","drawImage","updateCanvasTraits","trait","prevImage","traitType","image","prevTrait","traitName","id","createCard","nftName","edition","searchText","dataSearch","item","Object","some","key","toString","toLowerCase","includes","ownedFilter","canvas","hiddenCanvas","height","setHeight","width","setWidth","windowWidth","window","innerWidth","windowHeight","innerHeight","div","node","getBoundingClientRect","layer","img","Image","src","onload","ctx","current","getContext","clearRect","fillText","imgHidden","ctxHidden","savedImage","setSavedImage","saveImage","Promise","resolve","reject","imageToSave","toDataURL","ownedCards","setOwnedCards","bind"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport Select from 'react-select';\r\nimport Card from '../Card';\r\nimport traits from '../../traits';\r\nimport unnamedData from '../../metadata.jsx'\r\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\r\nimport Moralis from 'moralis';\r\nimport Authenticate from '../Authenticate';\r\nimport spotNFTAbi from '../../contracts/spotNFTAbi.json';\r\nimport spotTraitsAbi from '../../contracts/spotTraitsAbi.json';\r\nimport SetApproval from '../SetApproval';\r\nimport Mint from '../Mint';\r\n\r\nexport const Board = () => {\r\n    const { account, isAuthenticated } = useMoralis();\r\n    const userAddress = account\r\n    const spotTraitsContract = \"0x6BDAd2A83a8e70F459786a96a0a9159574685c0e\";\r\n    const spotNFTContract = '0x9455aa2aF62B529E49fBFE9D10d67990C0140AFC';\r\n\r\n    const [filter, setFilter] = useState('');\r\n    const [textinput, setTextinput] = useState('Name');\r\n    const [xInput, setXInput] = useState('127');\r\n    const [yInput, setYInput] = useState('185');\r\n    const [fontSize, setFontSize] = useState('30');\r\n    const [font, setFont] = useState('Fantasy');\r\n    const [fontStyle, setFontStyle] = useState('normal');\r\n\r\n    const textinputUser = (event) => {\r\n        setTextinput(event.target.value);\r\n    }\r\n    const userXInput = (event) => {\r\n        setXInput(event.target.value);\r\n    }\r\n    const userYInput = (event) => {\r\n        setYInput(event.target.value);\r\n    }\r\n    const userFontSize = (event) => {\r\n        setFontSize(event.target.value);\r\n    }\r\n\r\n    const textFontOptions = [\r\n        { value: \"Arial\", label: \"Arial\" },\r\n        { value: \"Comic Sans MS\", label: \"Comic Sans MS\" },\r\n        { value: \"Courier New\", label: \"Courier New\" },\r\n        { value: \"Times New Roman\", label: \"Times New Roman\" },\r\n        { value: \"Fantasy\", label: \"Fantasy\" },\r\n        { value: \"Sans-serif\", label: \"Sans-serif\" },\r\n        { value: \"Serif\", label: \"Serif\" },\r\n        { value: \"Cambria\", label: \"Cambria\" },\r\n\r\n    ];\r\n\r\n    const textFontStyleOptions = [\r\n        { value: \"normal\", label: \"Normal\" },\r\n        { value: \"bold\", label: \"Bold\" },\r\n\r\n\r\n    ];\r\n\r\n    const handleChange = selectedOption => {\r\n        console.log('handleChange', selectedOption.value);\r\n        setFont(selectedOption.value);\r\n    };\r\n\r\n    const handleChangeStyle = selectedOption => {\r\n        console.log('handleChange', selectedOption.value);\r\n        setFontStyle(selectedOption.value);\r\n    };\r\n\r\n\r\n    const [textinputText, setTextinputText] = useState('wtf');\r\n    const [xInputText, setXInputText] = useState('152');\r\n    const [yInputText, setYInputText] = useState('215');\r\n    const [fontSizeText, setFontSizeText] = useState('15');\r\n    const [fontText, setFontText] = useState('Arial');\r\n    const [fontStyleText, setFontStyleText] = useState('normal');\r\n\r\n\r\n    const textinputUserText = (event) => {\r\n        setTextinputText(event.target.value);\r\n    }\r\n    const userXInputText = (event) => {\r\n        setXInputText(event.target.value);\r\n    }\r\n    const userYInputText = (event) => {\r\n        setYInputText(event.target.value);\r\n    }\r\n    const userFontSizeText = (event) => {\r\n        setFontSizeText(event.target.value);\r\n    }\r\n\r\n    const textFontOptionsText = [\r\n        { value: \"Arial\", label: \"Arial\" },\r\n        { value: \"Comic Sans MS\", label: \"Comic Sans MS\" },\r\n        { value: \"Courier New\", label: \"Courier New\" },\r\n        { value: \"Times New Roman\", label: \"Times New Roman\" },\r\n        { value: \"Fantasy\", label: \"Fantasy\" },\r\n        { value: \"Sans-serif\", label: \"Sans-serif\" },\r\n        { value: \"Serif\", label: \"Serif\" },\r\n        { value: \"Cambria\", label: \"Cambria\" },\r\n\r\n    ];\r\n\r\n    const textFontStyleOptionsText = [\r\n        { value: \"normal\", label: \"Normal\" },\r\n        { value: \"bold\", label: \"Bold\" },\r\n\r\n\r\n    ];\r\n\r\n    const handleChangeText = selectedOption => {\r\n        console.log('handleChange', selectedOption.value);\r\n        setFontText(selectedOption.value);\r\n    };\r\n\r\n    const handleChangeStyleText = selectedOption => {\r\n        console.log('handleChange', selectedOption.value);\r\n        setFontStyleText(selectedOption.value);\r\n    };\r\n\r\n    {/* For Image retrieval */ }\r\n    const [canvasImage, setCanvasImage] = useState({\r\n        TombStone: '',\r\n        Text: '',\r\n    });\r\n    {/* For Traits retrieval */ }\r\n    const [chosenTrait, setChosenTrait] = useState({\r\n        TombStone: '',\r\n        TombStoneID: '1',\r\n        Eyes: '',\r\n        Mouth: '',\r\n        Hat: '',\r\n        Skin: '',\r\n        Nose: '',\r\n        Special: '',\r\n        Lines: '',\r\n        Branding: 'None',\r\n        BrandingID: '9999'\r\n    })\r\n\r\n\r\n    //Set an array of save UnnamedNFT traits which are unburnable and available to all.\r\n    const start = 3001;\r\n    const end = 3004;\r\n    const branding = [...Array(end - start + 1).keys()].map(x => x + start);\r\n\r\n    {/* For retrieval of traits */ }\r\n    const [walletTraits, setWalletTraits] = useState([])\r\n    const [apiLoaded, setApiLoaded] = useState(false)\r\n    const [checkMyTraits, setCheckMyTraits] = useState(false)\r\n    const unnamedNFTdata = unnamedData;\r\n\r\n    function getTraits() {\r\n        const options = { chain: \"0xa86a\", address: userAddress, token_address: spotTraitsContract };\r\n        Moralis.Web3API.account.getNFTsForContract(options).then((data) => {\r\n            const result = data.result\r\n            setWalletTraits(result.map(nft => nft.token_id))\r\n            setApiLoaded(true)\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getTraits();\r\n    }, [account])\r\n\r\n    function updateText() {\r\n        drawImage(canvasImage.TombStone);\r\n    }\r\n\r\n    function updateCanvasTraits(trait) {\r\n        setCanvasImage(prevImage => ({ ...prevImage, [trait.traitType]: trait.image }))\r\n        setChosenTrait(prevTrait => ({ ...prevTrait, [trait.traitType]: trait.traitName, [trait.traitType + 'ID']: trait.id }))\r\n    }\r\n\r\n    function createCard(trait) { //Building the card here from Card.jsx passing props and simultaneously fetching traits on click.\r\n        return (\r\n\r\n            <div key={trait.edition} onClick={() => {\r\n                updateCanvasTraits(trait)\r\n            }}> <Card\r\n                    nftName={trait.nftName}\r\n                    traitType={trait.traitType}\r\n                    traitName={trait.traitName}\r\n                    image={trait.image}\r\n                    id={trait.id}\r\n                /></div>\r\n        )\r\n    }\r\n\r\n    // For Searching traits\r\n    const searchText = (event) => {\r\n        setFilter(event.target.value);\r\n    }\r\n\r\n\r\n    let dataSearch = traits.filter(item => {\r\n        return Object.keys(item).some(key => item[key].toString().toLowerCase().includes(filter.toString().toLowerCase())\r\n        )\r\n    });\r\n    let ownedFilter = traits.filter(item => {\r\n\r\n        if (walletTraits.includes(item.id.toString()) || branding.includes(item.id)) {\r\n\r\n            return item\r\n        }\r\n\r\n    })\r\n\r\n    // Putting stuff on Canvas\r\n    const canvas = useRef(null)\r\n    const hiddenCanvas = useRef(null)\r\n    const [height, setHeight] = useState(null);\r\n    const [width, setWidth] = useState(null);\r\n    const { windowWidth } = useState(window.innerWidth)\r\n    const { windowHeight } = useState(window.innerHeight)\r\n\r\n    const div = useCallback(node => {\r\n\r\n        if (node !== null) {\r\n\r\n            setHeight(node.getBoundingClientRect().height); //set height and width of canvas relative to parent div.\r\n            setWidth(node.getBoundingClientRect().width);\r\n        }\r\n    }, [windowWidth, windowHeight]);\r\n\r\n    function drawImage(layer) {\r\n        const img = new Image();\r\n        //img.setAttribute('crossOrigin', '*');\r\n        img.src = layer\r\n        img.onload = () => {\r\n            const ctx = canvas.current.getContext(\"2d\")\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.drawImage(img, 0, 0, width, height);\r\n            ctx.font = `${fontStyle} ${fontSize}px ${font}`;\r\n            ctx.fillText(textinput, xInput, yInput);\r\n            ctx.font = `${fontStyleText} ${fontSizeText}px ${fontText}`;\r\n            ctx.fillText(textinputText, xInputText, yInputText, 100);\r\n        }\r\n\r\n        const imgHidden = new Image();\r\n        imgHidden.src = layer\r\n        imgHidden.onload = () => {\r\n            const ctxHidden = hiddenCanvas.current.getContext(\"2d\")\r\n            ctxHidden.clearRect(0, 0, hiddenCanvas.width, hiddenCanvas.height);\r\n            ctxHidden.drawImage(imgHidden, 0, 0, 900, 900);\r\n            ctxHidden.font = `${fontStyle} ${fontSize}px ${font}`;\r\n            ctxHidden.fillText(textinput, xInput, yInput);\r\n            ctxHidden.font = `${fontStyleText} ${fontSizeText}px ${fontText}`;\r\n            ctxHidden.fillText(textinputText, xInputText, yInputText, 100);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        drawImage(canvasImage.TombStone);\r\n        drawImage(canvasImage.Text);\r\n\r\n    }\r\n        , [canvasImage, canvas, windowWidth, windowHeight])\r\n    const [savedImage, setSavedImage] = useState('empty image') //Saving image for sending to IPFS. This part isn't active yet!\r\n    function saveImage() {\r\n        const result = (new Promise((resolve, reject) => {\r\n            const imageToSave = new Image();\r\n            imageToSave.src = hiddenCanvas.current.toDataURL('image/png', 1.0);\r\n            imageToSave.onload = function () {\r\n                resolve(this.src);\r\n            };\r\n        }));\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n\r\n    // Add feature: Filter owned trait cards\r\n    const [ownedCards, setOwnedCards] = useState(true)\r\n    //---------------------------------//\r\n\r\n    //filtering\r\n\r\n\r\n    if (!isAuthenticated) {\r\n        return (\r\n            <Authenticate />\r\n        );\r\n    } else\r\n        // Main Component Return\r\n        return (\r\n            <div className='container flex-auto mx-auto w-full'>\r\n\r\n                {/* Canvas Row*/}\r\n                <div className=\"lg:sticky top-20 grid 2xl:grid-cols-4 xl:grid-cols-2 lg:grid-cols-2 md:grid-cols-1 sm:grid-cols-1 gap-4 mt-1 ml-6 sm:p-5 bg-slate-900 lg:pb-3\">\r\n                    {/* canvas div */}\r\n\r\n                    <div className=\"p-1 mb-10 sm:mb-10\" ref={div} style={{ height: \"20rem\", width: \"20rem\" }}>\r\n                        <canvas\r\n                            ref={canvas}\r\n                            width={width}\r\n                            height={height}\r\n                            className='mt-1 border-1 border-4 border-slate-500 text-center content-center p-5'\r\n                        />\r\n                        <div className=\"text-center md: pl-10\"><h1 className='font-mono text-lg text-yellow-400 pt-1'>Gravedigger</h1></div>\r\n                        <canvas\r\n                            ref={hiddenCanvas}\r\n                            width='900px'\r\n                            height='900px'\r\n                            className='hidden' />\r\n                    </div>\r\n                    {/* canvas div ends */}\r\n                    {/* Stats div*/}\r\n                    <div className='grow border-dashed border-4 border-slate-500 p-3 pl-5 m-1 text-left col-span-1 w-80 md:mt-10 lg:mt-2 mt-10 sm:mt-10 text-sm' style={{ height: \"23rem\" }}>\r\n                        {/* Individual Stats */}\r\n                        <div className='font-mono text-white list-none flex pb-3'>\r\n                            <div className={`text-${(walletTraits.includes(`${chosenTrait.TombStoneID}`)) ? \"spot-yellow\" : \"[red]\"} font-bold pr-3`}>TombStone: </div>\r\n                            {chosenTrait.TombStoneID}\r\n                        </div>\r\n\r\n\r\n                        <div className='font-mono text-white list-none flex pb-3'>\r\n                            <div className='text-spot-yellow'>Name: </div>\r\n                            {textinput}\r\n                        </div>\r\n                        {/* End of Indiv Stats */}\r\n                        {/* Buttons */}\r\n                        <div className=\"pt-1 pb-1 flex\">\r\n\r\n                            <Mint\r\n                                chosenTrait={chosenTrait}\r\n                                walletTraits={walletTraits}\r\n                                saveImage={saveImage}\r\n                                userAddress={userAddress}\r\n                                canvas={chosenTrait}\r\n                                savedImage={savedImage}\r\n                                branding={branding}\r\n                            // traitsAvailability={traitsAvailability}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                        {/* End of Buttons */}\r\n                        {/* Two bottom text lines */}\r\n\r\n                        {/*check this*/}\r\n\r\n                        {/*  <div className='font-mono text-white list-none flex pb-0 pt-3 text-sm'>\r\n                            <div className='text-spot-yellow font-bold pr-3 text-xl'>* </div>\r\n                            Traits in your wallet:  {apiLoaded, checkMyTraits && walletTraits.length + ' nos.'} {apiLoaded, checkMyTraits && 'IDs: ' + walletTraits.map(trait => ' ' + trait)}\r\n                        </div>*/}\r\n                        <div className='font-mono text-white list-none flex pb-3 text-sm'>\r\n                            <div className='text-[red] pr-3 text-xl'>* </div>\r\n                            TombStone not in your wallet.\r\n                        </div>\r\n                        <div className=\"flex\"> <button className=\"w-full m-2 rounded-lg px-4 py-2 border-2 border-gray-200 text-gray-200\r\n    hover:bg-gray-200 hover:text-gray-900 duration-300 font-mono font-bold text-base\" onClick={() => {\r\n                                setOwnedCards(!ownedCards)\r\n                            }}>{!ownedCards ? 'My TombStones' : 'View All TombStones'}</button></div>\r\n                        {/*<div className='font-mono text-white list-none flex pb-3 text-sm'><span className={traitsAvailability === '0' ? \"text-green-300\" : \"text-[#fa2121]\"}>\r\n                            {traitsAvailability === '0' && currentDNA.length >= 14 ? 'Trait Combo is Unique!' : null}\r\n                            {traitsAvailability === '1' && currentDNA.length >= 14 ? \"Trait Combo's Been Minted!\" : null}</span>\r\n                        </div>*/} {/* End of btm text lines */}\r\n                    </div>{/* Stats div Ends*/}\r\n                    {/* SearchBox */}\r\n                    <div className=\"gap-4 pt-4 pl-2\">\r\n                        <div className=\"\">\r\n                            <div className='col-span-2 text-white'>Tomb Name: </div><div><input type=\"text\"\r\n                                className=\"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\" placeholder=\"Engrave\"\r\n                                value={textinput}\r\n                                onChange={textinputUser.bind(this)}\r\n                            /></div>\r\n\r\n                            <div className='col-span-2 text-white pt-2'>X coords: </div><div><input type=\"text\"\r\n                                className=\"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\" placeholder=\"x plot\"\r\n                                value={xInput}\r\n                                onChange={userXInput.bind(this)}\r\n                            /></div>\r\n\r\n                            <div className='col-span-1 text-white pt-2'>Y coords: </div><div><input type=\"text\"\r\n                                className=\"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\" placeholder=\"y plot\"\r\n                                value={yInput}\r\n                                onChange={userYInput.bind(this)}\r\n                            /></div>\r\n\r\n                            <div className='col-span-1 text-white pt-2'>Font Size: </div><div><input type=\"text\"\r\n                                className=\"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\" placeholder=\"Font size\"\r\n                                value={fontSize}\r\n                                onChange={userFontSize.bind(this)}\r\n                            /></div></div>\r\n                        <div className='flex justify-center pt-3 pb-2'>\r\n                            <div className='col-span-1 w-38'><Select options={textFontOptions} onChange={handleChange} defaultValue={{ label: \"Arial\", value: \"Arial\" }} /></div>\r\n                            <div className='col-span-1 w-38'><Select options={textFontStyleOptions} onChange={handleChangeStyle} defaultValue={{ label: \"Normal\", value: \"normal\" }} /></div>\r\n                        </div>\r\n\r\n\r\n                        {/*}   <div className='col-span-1'><input type=\"text\"\r\n                            className=\"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2\" placeholder=\"search trait/ID...\"\r\n                            value={filter}\r\n                            onChange={searchText.bind(this)}\r\n                        /></div>\r\n                    */}\r\n\r\n                        <div className='self-end'>\r\n                            <button className=\"w-1/2 m-2 rounded-lg px-4 py-2 border-2 border-gray-200 text-gray-200\r\n    hover:bg-gray-200 hover:text-gray-900 duration-300 font-mono font-bold text-base\" onClick={updateCanvasTraits}>Refresh Text</button>\r\n\r\n                        </div>\r\n                    </div>{/* SearchBox Ends */}\r\n\r\n                    <div className=\"gap-4 pt-4 pl-2\">\r\n                        <div className=\"\">\r\n                            <div className='col-span-2 text-white'>Epitaph: </div><div><input type=\"text\"\r\n                                className=\"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\" placeholder=\"Engrave\"\r\n                                value={textinputText}\r\n                                onChange={textinputUserText.bind(this)}\r\n                            /></div>\r\n\r\n                            <div className='col-span-2 text-white pt-2'>X coords: </div><div><input type=\"text\"\r\n                                className=\"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\" placeholder=\"x plot\"\r\n                                value={xInputText}\r\n                                onChange={userXInputText.bind(this)}\r\n                            /></div>\r\n\r\n                            <div className='col-span-1 text-white pt-2'>Y coords: </div><div><input type=\"text\"\r\n                                className=\"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\" placeholder=\"y plot\"\r\n                                value={yInputText}\r\n                                onChange={userYInputText.bind(this)}\r\n                            /></div>\r\n\r\n                            <div className='col-span-1 text-white pt-2'>Font Size: </div><div><input type=\"text\"\r\n                                className=\"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2 w-24\" placeholder=\"Font size\"\r\n                                value={fontSizeText}\r\n                                onChange={userFontSizeText.bind(this)}\r\n                            /></div></div>\r\n                        <div className='flex justify-center pt-3 pb-2'>\r\n                            <div className='col-span-1 w-38'><Select options={textFontOptionsText} onChange={handleChangeText} defaultValue={{ label: \"Arial\", value: \"Arial\" }} /></div>\r\n                            <div className='col-span-1 w-38'><Select options={textFontStyleOptionsText} onChange={handleChangeStyleText} defaultValue={{ label: \"Normal\", value: \"normal\" }} /></div>\r\n                        </div>\r\n\r\n\r\n                        {/*}   <div className='col-span-1'><input type=\"text\"\r\n                            className=\"border-2 border-slate-600 bg-slate-400 text-left font-mono placeholder-slate-600 pl-2\" placeholder=\"search trait/ID...\"\r\n                            value={filter}\r\n                            onChange={searchText.bind(this)}\r\n                        /></div>\r\n                    */}\r\n\r\n                        <div className='self-end'>\r\n                            <button className=\"w-1/2 m-2 rounded-lg px-4 py-2 border-2 border-gray-200 text-gray-200\r\n    hover:bg-gray-200 hover:text-gray-900 duration-300 font-mono font-bold text-base\" onClick={updateCanvasTraits}>Refresh Text</button>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>{/* Canvas Row Div Ends*/}\r\n                <div className='overflow-y-auto'>\r\n                    <div className=\"p-10 grid grid-cols-1 sm:grid-cols-1 md:grid-cols-1 lg:grid-cols-4 xl:grid-cols-6 gap-5 font-mono text-spot-yellow\">\r\n                        {ownedCards ? ownedFilter.map(createCard) : dataSearch.map(createCard)}\r\n                    </div></div>\r\n                {/*} <div className=\"text-white\">BackGround: {unnamedData[`${(chosenTrait.UnnamedNFTID - 1)}`].attributes[0].value}</div>\r\n                <div className=\"text-white\">Eyes: {unnamedData[`${(chosenTrait.UnnamedNFTID - 1)}`].attributes[1].value}</div>\r\n                <div className=\"text-white\">Mouth: {unnamedData[`${(chosenTrait.UnnamedNFTID - 1)}`].attributes[2].value}</div>\r\n                <div className=\"text-white\">Hat: {unnamedData[`${(chosenTrait.UnnamedNFTID - 1)}`].attributes[3].value}</div>\r\n                <div className=\"text-white\">Skin: {unnamedData[`${(chosenTrait.UnnamedNFTID - 1)}`].attributes[4].value}</div>\r\n                <div className=\"text-white\">Nose: {unnamedData[`${(chosenTrait.UnnamedNFTID - 1)}`].attributes[5].value}</div>\r\n                <div className=\"text-white\">Special: {unnamedData[`${(chosenTrait.UnnamedNFTID - 1)}`].attributes[6].value}</div>\r\n                <div className=\"text-white\">Lines: {unnamedData[`${(chosenTrait.UnnamedNFTID - 1)}`].attributes[7].value}</div>\r\n\r\n                            */}\r\n            </div>\r\n\r\n        )\r\n\r\n}\r\n/*\r\n\r\n\r\nlet ownedFilter = traits.filter(item => {\r\n\r\n        if (walletTraits.includes(item.id.toString()) || branding.includes(item.id)) {\r\n\r\n            return item\r\n        }\r\n\r\n    })\r\n    */"]},"metadata":{},"sourceType":"module"}